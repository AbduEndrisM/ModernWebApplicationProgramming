Angular Form

why form?
	- knowing the status of the form at any single time [thats why we use 	   observable for forms]
	- security 
	- 
pristine - no chage 
dirty - one element changed
touched - mouse touched
untouche - no mouse interacton
enable/disable
pending - b4 asycn validation waiting state 

we dont rellay with form dom elements, we use form as object

forms represented as formGroup object (the whole form template)
each formGroup has formControl (elements) (each input, textfields..)

we connect formGroup and formControl using directives ngForm and ngModule respectivelly.  which is formGroup and formControl respetivelly.

2 ways of form template driven (FormsModule) and reactive (

we should import formsModule/and ReactiveFormsModule]
It is reactive form beacuse we use observable.


ngForm directives does 2 things, 1-create form group and give me a reference to form and 2- emit onsubmit using (ngSubmit) 
the selector for ngForm is <form> tag. 

In teplate driven
<form (ngsubmit)="onubmit(f)" #f="ngForm" > ......    here f represent the DOM element the formGroup


In Reactive we use ngForm ...


Authentication and Authorization

RESTFull API - means stateless. we dont save the sate at the server, we save at the client [using object called token].

So in the modern web appis we dont use cookie and session to store state. we use client side objects called token.

OIDC-Open Id Connect = delegation 

OAuth 2.0 Authentication Code Flow [google drive authentication] = a delegation access [a delegated authorization] to certain scope of  your data for some specific restriction


token_type = Bearer = standard token type 

Two types of delegation authorization - access someone's data on behalf of him. [not authentication]
Implicit flow = ask for token from the very beinning to access the delegated data.
	less secure
PKCE security = we ask for authorizato code at the begining, and answer with a property code_challenge (hasing string) and its method (S256..), and use this code to get the token. then we get access token to access the data. 


OpenIdConnect = same as OAuth2 but on top it, it sets standard how t access users info in delegaton

In OIDC we recieve Id and token access. but in OAuth its send only  token access.


JWT: JSon Web  Token
3 parts 1 = header, 2 payload= {data} and 3=signature {hash using orivate key}
header is base64 (h)
payload is base64 (p)
signature = hash (base64(h) + base64(p) + Privte key)

JWT 2 parts can be decrypted but not the signature. so we can know the payload by decrypting it. Password and sensitive info shoudn't pass form server.


angular login (name pass)=> server replay {jwt token}=> 
[if thers remember me option = we send "expiresIn" property together. 

the jwt token will be saved in our local storage 
using Guards we can check either the route is allowed by comparing the token.

to logout remove the token 

we can protect all the server api's using middleware 
Interceptor = used to call all the apis using it, if there is token send it else dont. [check all the tokens before going to the middleware]


Passwordles Authen: 
one time token
medium.com

Angular compiler
the browser cant understand typescript (angular) like *ngIf *ngFor.., (check main.ts in source code mode) .. so should be trasnfer to pure JS format (ES5) = using JiT () or AoT (Ahead of Time) or SSR compilation

JiT = in time
AoT=just time 
SSR=ahead of time
  
- JiT = html, angular + copiler => pure JS=> APP  === the default for angular now
- AoT = angular +compiler+js=> App  === next anglar version default
- SSR (Server Side Rendering) - the app will render without DOM  angular + compilr=> Purre JS => static page (and a hidden APP)  === we should download angular universal ...

preboot = in SSR the static page ...

two types of SSR pre render static page and ...





Deploy SPA to GitHub Pages:
single apps